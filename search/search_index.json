{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview \u00b6 CodeLab lets you write code that is compiled on the fly, and that is then immediately executed in the Paint.NET effect engine. With this you can implement almost any type of effect you want, if you have the programming and mathematical talent to do so. This plugin works by presenting you with a code editor that you can use to type in C# code that is then compiled and executed (rendered) as soon as you stop typing.","title":"Overview"},{"location":"#overview","text":"CodeLab lets you write code that is compiled on the fly, and that is then immediately executed in the Paint.NET effect engine. With this you can implement almost any type of effect you want, if you have the programming and mathematical talent to do so. This plugin works by presenting you with a code editor that you can use to type in C# code that is then compiled and executed (rendered) as soon as you stop typing.","title":"Overview"},{"location":"autocomplete-box/","text":"AutoComplete Box \u00b6 The AutoComplete Box displays Object Types, static & instance members, constructors, keywords, and snippets. Filtering \u00b6 String Filtering \u00b6 As you continue to type while the AutoComplete Box is open, the list of items will filter to only match the characters you\u2019ve typed. Tip You can also filter using Initials. ex: Typing \u201cisc\u201d will match I nt S lider C ontrol Object Filtering \u00b6 If you only want to show a specific object type, you can use one of these hotkeys to invoke filtering: Alt + L \u2014 Only show Local Variables & Parameters Alt + O \u2014 Only show Constants Alt + P \u2014 Only show Properties Alt + F \u2014 Only show Fields Alt + M \u2014 Only show Methods Alt + C \u2014 Only show Classes Alt + S \u2014 Only show Structs Alt + E \u2014 Only show Enums Alt + K \u2014 Only show Keywords Alt + T \u2014 Only show Snippets Alt + I \u2014 Only show Interfaces Info Only one Object Filter can be used at a time.","title":"AutoComplete Box"},{"location":"autocomplete-box/#autocomplete-box","text":"The AutoComplete Box displays Object Types, static & instance members, constructors, keywords, and snippets.","title":"AutoComplete Box"},{"location":"autocomplete-box/#filtering","text":"","title":"Filtering"},{"location":"autocomplete-box/#string-filtering","text":"As you continue to type while the AutoComplete Box is open, the list of items will filter to only match the characters you\u2019ve typed. Tip You can also filter using Initials. ex: Typing \u201cisc\u201d will match I nt S lider C ontrol","title":"String Filtering"},{"location":"autocomplete-box/#object-filtering","text":"If you only want to show a specific object type, you can use one of these hotkeys to invoke filtering: Alt + L \u2014 Only show Local Variables & Parameters Alt + O \u2014 Only show Constants Alt + P \u2014 Only show Properties Alt + F \u2014 Only show Fields Alt + M \u2014 Only show Methods Alt + C \u2014 Only show Classes Alt + S \u2014 Only show Structs Alt + E \u2014 Only show Enums Alt + K \u2014 Only show Keywords Alt + T \u2014 Only show Snippets Alt + I \u2014 Only show Interfaces Info Only one Object Filter can be used at a time.","title":"Object Filtering"},{"location":"builder/","text":"DLL Builder \u00b6 TODO Fields \u00b6 TODO Menu Settings \u00b6 TODO Name, submenu, author, ect. Support Information \u00b6 TODO Forced Settings \u00b6 TODO Help Content \u00b6 TODO Help content can be one of these four types: None. If no help text is entered, no ? button will be added to your effect. Plain text (including tabs and returns). This will be displayed in a modal message box. URL. If your help text is a URL, it will be opened in a non-modal browser window. Rich Formatted Text. This will be displayed in a modal pop up form with a rich text format control. All RTF features are supported including pictures. All URLs included are automatically clickable and open in a new browser window. View Source \u00b6 TODO Generate VS Solution \u00b6 TODO Build \u00b6 TODO Cancel \u00b6 TODO Supplemental Files \u00b6 TODO EffectName.png \u2014 16x16 Effect Icon EffectName.example.png \u2014 200x150 image to display in the Plugin Browser EffectName.rtf \u2014 Help content in the Rich Text File format","title":"DLL Builder"},{"location":"builder/#dll-builder","text":"TODO","title":"DLL Builder"},{"location":"builder/#fields","text":"TODO","title":"Fields"},{"location":"builder/#menu-settings","text":"TODO Name, submenu, author, ect.","title":"Menu Settings"},{"location":"builder/#support-information","text":"TODO","title":"Support Information"},{"location":"builder/#forced-settings","text":"TODO","title":"Forced Settings"},{"location":"builder/#help-content","text":"TODO Help content can be one of these four types: None. If no help text is entered, no ? button will be added to your effect. Plain text (including tabs and returns). This will be displayed in a modal message box. URL. If your help text is a URL, it will be opened in a non-modal browser window. Rich Formatted Text. This will be displayed in a modal pop up form with a rich text format control. All RTF features are supported including pictures. All URLs included are automatically clickable and open in a new browser window.","title":"Help Content"},{"location":"builder/#view-source","text":"TODO","title":"View Source"},{"location":"builder/#generate-vs-solution","text":"TODO","title":"Generate VS Solution"},{"location":"builder/#build","text":"TODO","title":"Build"},{"location":"builder/#cancel","text":"TODO","title":"Cancel"},{"location":"builder/#supplemental-files","text":"TODO EffectName.png \u2014 16x16 Effect Icon EffectName.example.png \u2014 200x150 image to display in the Plugin Browser EffectName.rtf \u2014 Help content in the Rich Text File format","title":"Supplemental Files"},{"location":"debug-output/","text":"Debug Output \u00b6 The Debug Output pane displays debug messages from your code. This can be useful for evaluating variable values, among other things. Example Debug . WriteLine ( \"My Debug Message!\" ); Example Debug . WriteLine ( myVariable ); Debug Mode \u00b6 When the Debug Output pane is opened, the compiler is automatically set to Debug mode. Info This doesn\u2019t affect \u2018Build DLL\u2019 or \u2018Preview Effect\u2019; they always use Release mode. Likewise, when the Debug Output pane is closed, the compiler is automatically set to Release mode. Example #if DEBUG // This code only runs when compiling in Debug mode DoSomething (); #endif","title":"Debug Output"},{"location":"debug-output/#debug-output","text":"The Debug Output pane displays debug messages from your code. This can be useful for evaluating variable values, among other things. Example Debug . WriteLine ( \"My Debug Message!\" ); Example Debug . WriteLine ( myVariable );","title":"Debug Output"},{"location":"debug-output/#debug-mode","text":"When the Debug Output pane is opened, the compiler is automatically set to Debug mode. Info This doesn\u2019t affect \u2018Build DLL\u2019 or \u2018Preview Effect\u2019; they always use Release mode. Likewise, when the Debug Output pane is closed, the compiler is automatically set to Release mode. Example #if DEBUG // This code only runs when compiling in Debug mode DoSomething (); #endif","title":"Debug Mode"},{"location":"editor/","text":"Editor \u00b6 Margins \u00b6 The different margins can can be enabled/disabled in the Settings dialog. Line Numbers \u00b6 When enabled, displays the index number of each document line. If word wrap is also enabled, the index number will span a taller area for wrapped lines. Bookmarks \u00b6 When enabled, displays a clickable margin for marking document lines. Useful when working on very long document, and you need to scroll back to a specific line(s). Code Folding \u00b6 When enabled, displays + and - symbols to expand/collapse code blocks. Find & Replace \u00b6 A panel to perform finding and replacing operations. See the Find & Replace page for details. Indicators \u00b6 Errors \u00b6 Code errors are underlined with red squiggles. Warnings \u00b6 Code warnings are underlined with green squiggles. Spellcheck \u00b6 Misspelled words are underlined with magenta squiggles. Matches from Find \u00b6 Find matches are highlighted in orange. Object Highlight \u00b6 Highlights all usages of the object under the text caret. Indicator Map \u00b6 This replaces the standard vertical scrollbar. It displays the indicator marks for the entire document. The Indicator Map can be enabled/disabled in the Settings dialog. Go To Definition \u00b6 Pressing the F12 key goes to the definition of the object under the text caret. If it defined in the current document (ex: a variable), the text caret is scrolled to that position. If it is a Type defined in the .NET Framework, a definition source will be generated. Rename Variable \u00b6 When renaming an existing variable, a dotted box will appear around the variable, and will provide access to the light bulb menu. The light bulb menu has an option to rename all instances of that variable. Tooltips \u00b6 Display information of the Object at the location of the mouse cursor, such as: Type, Return type, Member type, namespace, ect. If there is an error at the location of the mouse cursor, then the error message is displayed instead. Context Menu \u00b6 TODO","title":"Editor"},{"location":"editor/#editor","text":"","title":"Editor"},{"location":"editor/#margins","text":"The different margins can can be enabled/disabled in the Settings dialog.","title":"Margins"},{"location":"editor/#line-numbers","text":"When enabled, displays the index number of each document line. If word wrap is also enabled, the index number will span a taller area for wrapped lines.","title":"Line Numbers"},{"location":"editor/#bookmarks","text":"When enabled, displays a clickable margin for marking document lines. Useful when working on very long document, and you need to scroll back to a specific line(s).","title":"Bookmarks"},{"location":"editor/#code-folding","text":"When enabled, displays + and - symbols to expand/collapse code blocks.","title":"Code Folding"},{"location":"editor/#find-replace","text":"A panel to perform finding and replacing operations. See the Find & Replace page for details.","title":"Find &amp; Replace"},{"location":"editor/#indicators","text":"","title":"Indicators"},{"location":"editor/#errors","text":"Code errors are underlined with red squiggles.","title":"Errors"},{"location":"editor/#warnings","text":"Code warnings are underlined with green squiggles.","title":"Warnings"},{"location":"editor/#spellcheck","text":"Misspelled words are underlined with magenta squiggles.","title":"Spellcheck"},{"location":"editor/#matches-from-find","text":"Find matches are highlighted in orange.","title":"Matches from Find"},{"location":"editor/#object-highlight","text":"Highlights all usages of the object under the text caret.","title":"Object Highlight"},{"location":"editor/#indicator-map","text":"This replaces the standard vertical scrollbar. It displays the indicator marks for the entire document. The Indicator Map can be enabled/disabled in the Settings dialog.","title":"Indicator Map"},{"location":"editor/#go-to-definition","text":"Pressing the F12 key goes to the definition of the object under the text caret. If it defined in the current document (ex: a variable), the text caret is scrolled to that position. If it is a Type defined in the .NET Framework, a definition source will be generated.","title":"Go To Definition"},{"location":"editor/#rename-variable","text":"When renaming an existing variable, a dotted box will appear around the variable, and will provide access to the light bulb menu. The light bulb menu has an option to rename all instances of that variable.","title":"Rename Variable"},{"location":"editor/#tooltips","text":"Display information of the Object at the location of the mouse cursor, such as: Type, Return type, Member type, namespace, ect. If there is an error at the location of the mouse cursor, then the error message is displayed instead.","title":"Tooltips"},{"location":"editor/#context-menu","text":"TODO","title":"Context Menu"},{"location":"error-list/","text":"Error List \u00b6 This pane will display a list of any errors in your C# code. Click on the individual errors to jump to the portion of the code that caused the error. Due to errors in your code (like mismatched braces) the error may be flagged outside of your code. Please check the structure of your script to correct those types of errors. Info Errors are also indicated in the editor with red squiggle underlines. Context Menu \u00b6 Copy Error Message \u00b6 Copies the error message (excluding the error number and the line number) to the clipboard. Read Full Error \u00b6 Opens a dialog box containing the full error for easier reading. Lookup Error Code \u00b6 Opens the online documentation for the specific error code.","title":"Error List"},{"location":"error-list/#error-list","text":"This pane will display a list of any errors in your C# code. Click on the individual errors to jump to the portion of the code that caused the error. Due to errors in your code (like mismatched braces) the error may be flagged outside of your code. Please check the structure of your script to correct those types of errors. Info Errors are also indicated in the editor with red squiggle underlines.","title":"Error List"},{"location":"error-list/#context-menu","text":"","title":"Context Menu"},{"location":"error-list/#copy-error-message","text":"Copies the error message (excluding the error number and the line number) to the clipboard.","title":"Copy Error Message"},{"location":"error-list/#read-full-error","text":"Opens a dialog box containing the full error for easier reading.","title":"Read Full Error"},{"location":"error-list/#lookup-error-code","text":"Opens the online documentation for the specific error code.","title":"Lookup Error Code"},{"location":"find-and-replace/","text":"Find & Replace \u00b6 The Find & Replace panel allow you to search the code document, and highlight all instances that match the search string. Find Options \u00b6 Match Casing \u00b6 To qualify as a match, every character of the string must have the same casing of search string. Example myWord would match myWord , but not MyWord . Whole Word \u00b6 Example Selection would match selection , but not GetSelection . Regular Expressions \u00b6 Example Amount\\d would match Amount1 and Amount2 . Interpret Escape Characters \u00b6 Example \\r\\n would allow your search to span to the next line. Replace \u00b6 This is the string you wish to use as a replacement of your search query. Replace All \u00b6 Pressing this button will replace all instances of your search query with your replacement string.","title":"Find & Replace"},{"location":"find-and-replace/#find-replace","text":"The Find & Replace panel allow you to search the code document, and highlight all instances that match the search string.","title":"Find &amp; Replace"},{"location":"find-and-replace/#find-options","text":"","title":"Find Options"},{"location":"find-and-replace/#match-casing","text":"To qualify as a match, every character of the string must have the same casing of search string. Example myWord would match myWord , but not MyWord .","title":"Match Casing"},{"location":"find-and-replace/#whole-word","text":"Example Selection would match selection , but not GetSelection .","title":"Whole Word"},{"location":"find-and-replace/#regular-expressions","text":"Example Amount\\d would match Amount1 and Amount2 .","title":"Regular Expressions"},{"location":"find-and-replace/#interpret-escape-characters","text":"Example \\r\\n would allow your search to span to the next line.","title":"Interpret Escape Characters"},{"location":"find-and-replace/#replace","text":"This is the string you wish to use as a replacement of your search query.","title":"Replace"},{"location":"find-and-replace/#replace-all","text":"Pressing this button will replace all instances of your search query with your replacement string.","title":"Replace All"},{"location":"keyboard-shortcuts/","text":"Keyboard Shortcuts \u00b6 This the master list of all the keyboard shortcuts in CodeLab. Editor \u00b6 Ctrl + A \u2014 Select All Ctrl + B \u2014 Build DLL Ctrl + C \u2014 Copy Selection Ctrl + D \u2014 Duplicate Line(s) Ctrl + E \u2014 Show/Hide Errors List Ctrl + F \u2014 Find Ctrl + G \u2014 Ctrl + H \u2014 Replace Ctrl + I \u2014 User Interface Designer Ctrl + J \u2014 Show Autocomplete box Ctrl + K \u2014 Comment Selection Ctrl + L \u2014 Ctrl + M \u2014 Ctrl + N \u2014 New code document Ctrl + O \u2014 Open code document Ctrl + P \u2014 Preview Effect Ctrl + Q \u2014 Format Document Ctrl + R \u2014 Ctrl + S \u2014 Save code document Ctrl + T \u2014 Ctrl + U \u2014 Uncomment Selection Ctrl + V \u2014 Paste Ctrl + W \u2014 Close document tab Ctrl + X \u2014 Cut Selection Ctrl + Y \u2014 Redo Ctrl + Z \u2014 Undo Ctrl + Alt + O Show/Hide Debug Output Tab \u2014 Indent Shift + Tab \u2014 Unindent Ctrl + Tab \u2014 Switch to tab on the right Ctrl + Shift + Tab \u2014 Switch to tab on the left F6 \u2014 Execute a Build F12 \u2014 Go to Definition AutoComplete Box \u00b6 Tab \u2014 Autocomplete (Forced autocomplete; even when there are no appropriate matches) Esc \u2014 Closes the AutoComplete Box without actually doing any autocompletion. Alt + L \u2014 Only show Local Variables & Parameters Alt + O \u2014 Only show Constants Alt + P \u2014 Only show Properties Alt + F \u2014 Only show Fields Alt + M \u2014 Only show Methods Alt + C \u2014 Only show Classes Alt + S \u2014 Only show Structs Alt + E \u2014 Only show Enums Alt + K \u2014 Only show Keywords Alt + T \u2014 Only show Snippets Alt + I \u2014 Only show Interfaces Misc \u00b6 F1 \u2014 Open the Codelab help site","title":"Keyboard Shortcuts"},{"location":"keyboard-shortcuts/#keyboard-shortcuts","text":"This the master list of all the keyboard shortcuts in CodeLab.","title":"Keyboard Shortcuts"},{"location":"keyboard-shortcuts/#editor","text":"Ctrl + A \u2014 Select All Ctrl + B \u2014 Build DLL Ctrl + C \u2014 Copy Selection Ctrl + D \u2014 Duplicate Line(s) Ctrl + E \u2014 Show/Hide Errors List Ctrl + F \u2014 Find Ctrl + G \u2014 Ctrl + H \u2014 Replace Ctrl + I \u2014 User Interface Designer Ctrl + J \u2014 Show Autocomplete box Ctrl + K \u2014 Comment Selection Ctrl + L \u2014 Ctrl + M \u2014 Ctrl + N \u2014 New code document Ctrl + O \u2014 Open code document Ctrl + P \u2014 Preview Effect Ctrl + Q \u2014 Format Document Ctrl + R \u2014 Ctrl + S \u2014 Save code document Ctrl + T \u2014 Ctrl + U \u2014 Uncomment Selection Ctrl + V \u2014 Paste Ctrl + W \u2014 Close document tab Ctrl + X \u2014 Cut Selection Ctrl + Y \u2014 Redo Ctrl + Z \u2014 Undo Ctrl + Alt + O Show/Hide Debug Output Tab \u2014 Indent Shift + Tab \u2014 Unindent Ctrl + Tab \u2014 Switch to tab on the right Ctrl + Shift + Tab \u2014 Switch to tab on the left F6 \u2014 Execute a Build F12 \u2014 Go to Definition","title":"Editor"},{"location":"keyboard-shortcuts/#autocomplete-box","text":"Tab \u2014 Autocomplete (Forced autocomplete; even when there are no appropriate matches) Esc \u2014 Closes the AutoComplete Box without actually doing any autocompletion. Alt + L \u2014 Only show Local Variables & Parameters Alt + O \u2014 Only show Constants Alt + P \u2014 Only show Properties Alt + F \u2014 Only show Fields Alt + M \u2014 Only show Methods Alt + C \u2014 Only show Classes Alt + S \u2014 Only show Structs Alt + E \u2014 Only show Enums Alt + K \u2014 Only show Keywords Alt + T \u2014 Only show Snippets Alt + I \u2014 Only show Interfaces","title":"AutoComplete Box"},{"location":"keyboard-shortcuts/#misc","text":"F1 \u2014 Open the Codelab help site","title":"Misc"},{"location":"main-window/","text":"Main Window \u00b6 Menus \u00b6 See the Menus page for details. Toolbar \u00b6 See the Toolbar page for details. Tab Bar \u00b6 See the Tab Bar page for details. Editor \u00b6 See the Editor page for details. Error List \u00b6 See the Error List page for details. Debug Output \u00b6 See the Debug Output page for details. Build Button \u00b6 The build button can be used to compile your current script and run the effect on your current selection. When you pause typing in the code editor for a few seconds, CodeLab will automatically run this Build process for you. If build errors occur, they will be listed in the Error List pane. OK Button \u00b6 When you are happy with your effect, press the OK button to finalize the effect to your current selection. Cancel Button \u00b6 If you do not like your effect, press the Cancel button to close the CodeLab editor window WITHOUT applying any changes to your original image. Warning Canceling CodeLab will discard the contents of all tabs. Be sure to save any changes beforehand.","title":"Main Window"},{"location":"main-window/#main-window","text":"","title":"Main Window"},{"location":"main-window/#menus","text":"See the Menus page for details.","title":"Menus"},{"location":"main-window/#toolbar","text":"See the Toolbar page for details.","title":"Toolbar"},{"location":"main-window/#tab-bar","text":"See the Tab Bar page for details.","title":"Tab Bar"},{"location":"main-window/#editor","text":"See the Editor page for details.","title":"Editor"},{"location":"main-window/#error-list","text":"See the Error List page for details.","title":"Error List"},{"location":"main-window/#debug-output","text":"See the Debug Output page for details.","title":"Debug Output"},{"location":"main-window/#build-button","text":"The build button can be used to compile your current script and run the effect on your current selection. When you pause typing in the code editor for a few seconds, CodeLab will automatically run this Build process for you. If build errors occur, they will be listed in the Error List pane.","title":"Build Button"},{"location":"main-window/#ok-button","text":"When you are happy with your effect, press the OK button to finalize the effect to your current selection.","title":"OK Button"},{"location":"main-window/#cancel-button","text":"If you do not like your effect, press the Cancel button to close the CodeLab editor window WITHOUT applying any changes to your original image. Warning Canceling CodeLab will discard the contents of all tabs. Be sure to save any changes beforehand.","title":"Cancel Button"},{"location":"menus/","text":"Menus \u00b6 File \u00b6 New (Ctrl + N) \u00b6 Opens the New Document dialog, which allows for to configurable templates. Open\u2026 (Ctrl + O) \u00b6 Display a dialog to choose a .cs file to load into CodeLab. Open Recent \u00b6 This will open a submenu containing the eight most recently opened .cs files. Save (Ctrl + S) \u00b6 This will save changes to an opened .cs file. Save As\u2026 (Ctrl + Shift + S) \u00b6 This will open the standard Windows Save As\u2026 dialog box. When you pick a name and click OK, CodeLab will save your current script to that file. It is important that your filename uses alphanumeric characters only (no spaces or other special symbols) as this name will be used for your effect\u2019s internal namespace when building a DLL of your effect. Saving a file updates the filename shown in the CodeLab title bar. This is important because when you build a DLL file, this is the name that the DLL file will have. Build DLL\u2026 (Ctrl + B) \u00b6 Use this option when you are happy with your effect and want to make it a permanent part of your Paint.NET (or you want to share your effect with your friends). Be sure to save your script file ( Ctrl + S ) before saving as a DLL. See this page for more details on creating DLL files for use with Paint.NET. User Interface Designer (Ctrl + I) \u00b6 Use this option before you start editing your Render function to design the user interface controls your effect will have. See this page for more details on using CodeLab\u2019s UI designer. Preview Effect (Ctrl + P) \u00b6 Allows you to run your Effect with a fully functional UI, directly from within CodeLab, without building a dll file and installing it. Exit \u00b6 This will close the editor without building a DLL or even applying your effect to the current selection. Edit \u00b6 Undo (Ctrl + Z) \u00b6 Steps backwards in the edit history of the document. Redo (Ctrl + Y) \u00b6 Steps forwards in the edit history of the document. Select All (Ctrl + A) \u00b6 This command selects your entire script within the code window. From there, you can\u2026 Find (Ctrl + F) \u00b6 Open the Find & Replace panel. Replace (Ctrl + H) \u00b6 Open the Find & Replace panel in expanded form. Cut (Ctrl + X) \u00b6 This command deletes the currently selected code in the editor window and places a copy of the deleted code onto the clipboard. Copy (Ctrl + C) \u00b6 This command places a copy of the currently selected code in the editor window onto the clipboard. The currently selected code is NOT deleted. Paste (Ctrl + V) \u00b6 This command replaces the current selection with the code from the clipboard. Indent (Tab) \u00b6 If you have lines of code selected in the editor window, pressing the tab key will indent those lines by four spaces. If only a partial line is selected, after pressing the tab key, the entire line will become selected. Unindent (Shift + Tab) \u00b6 If you have lines of code selected in the editor window, pressing the shift-tab key will unindent those lines by four spaces. If only a partial line is selected, after pressing the shift-tab key, the entire line will become selected. Comment Selection (Ctrl + K) \u00b6 Prepends the selected lines with // to transform it into comment. Useful when wanting to temporarily disable part of your code. Uncomment Selection (Ctrl + U) \u00b6 Removes any prepended // from the selected lines. Format Document (Ctrl + Q) \u00b6 Automatically indents code, and trims whitespace from line ends. View \u00b6 Errors List (Ctrl + E) \u00b6 This will toggle the visibility of the errors list. Debug Output (Ctrl + Alt + O) \u00b6 This toggles the visibility of the debug output. Note Having the debug output visible will also put the compiler into Debug mode. Transparency \u00b6 By default, the CodeLab window is not transparent at all. If you would like to be able to see through the code window to observe the effect your script is having on the current selection, use this option to modify CodeLab\u2019s transparency level. You may select 50% (nearly transparent), 25%, 10% (barely transparent), and 0% (not transparent). Help \u00b6 Help Topics\u2026 (F1) \u00b6 Opens the online CodeLab Help page. Changes on this version\u2026 \u00b6 Opens the online changelog. Discuss Plugin Development\u2026 \u00b6 Open the online forum for Paint.NET plugin development. CodeLab Settings\u2026 \u00b6 Opens the CodeLab Settings dialog. About\u2026 \u00b6 Shows the About box which includes the version number and copyright message for CodeLab.","title":"Menus"},{"location":"menus/#menus","text":"","title":"Menus"},{"location":"menus/#file","text":"","title":"File"},{"location":"menus/#new-ctrl-n","text":"Opens the New Document dialog, which allows for to configurable templates.","title":"New (Ctrl + N)"},{"location":"menus/#open-ctrl-o","text":"Display a dialog to choose a .cs file to load into CodeLab.","title":"Open... (Ctrl + O)"},{"location":"menus/#open-recent","text":"This will open a submenu containing the eight most recently opened .cs files.","title":"Open Recent"},{"location":"menus/#save-ctrl-s","text":"This will save changes to an opened .cs file.","title":"Save (Ctrl + S)"},{"location":"menus/#save-as-ctrl-shift-s","text":"This will open the standard Windows Save As\u2026 dialog box. When you pick a name and click OK, CodeLab will save your current script to that file. It is important that your filename uses alphanumeric characters only (no spaces or other special symbols) as this name will be used for your effect\u2019s internal namespace when building a DLL of your effect. Saving a file updates the filename shown in the CodeLab title bar. This is important because when you build a DLL file, this is the name that the DLL file will have.","title":"Save As... (Ctrl + Shift + S)"},{"location":"menus/#build-dll-ctrl-b","text":"Use this option when you are happy with your effect and want to make it a permanent part of your Paint.NET (or you want to share your effect with your friends). Be sure to save your script file ( Ctrl + S ) before saving as a DLL. See this page for more details on creating DLL files for use with Paint.NET.","title":"Build DLL... (Ctrl + B)"},{"location":"menus/#user-interface-designer-ctrl-i","text":"Use this option before you start editing your Render function to design the user interface controls your effect will have. See this page for more details on using CodeLab\u2019s UI designer.","title":"User Interface Designer (Ctrl + I)"},{"location":"menus/#preview-effect-ctrl-p","text":"Allows you to run your Effect with a fully functional UI, directly from within CodeLab, without building a dll file and installing it.","title":"Preview Effect (Ctrl + P)"},{"location":"menus/#exit","text":"This will close the editor without building a DLL or even applying your effect to the current selection.","title":"Exit"},{"location":"menus/#edit","text":"","title":"Edit"},{"location":"menus/#undo-ctrl-z","text":"Steps backwards in the edit history of the document.","title":"Undo (Ctrl + Z)"},{"location":"menus/#redo-ctrl-y","text":"Steps forwards in the edit history of the document.","title":"Redo (Ctrl + Y)"},{"location":"menus/#select-all-ctrl-a","text":"This command selects your entire script within the code window. From there, you can\u2026","title":"Select All (Ctrl + A)"},{"location":"menus/#find-ctrl-f","text":"Open the Find & Replace panel.","title":"Find (Ctrl + F)"},{"location":"menus/#replace-ctrl-h","text":"Open the Find & Replace panel in expanded form.","title":"Replace (Ctrl + H)"},{"location":"menus/#cut-ctrl-x","text":"This command deletes the currently selected code in the editor window and places a copy of the deleted code onto the clipboard.","title":"Cut (Ctrl + X)"},{"location":"menus/#copy-ctrl-c","text":"This command places a copy of the currently selected code in the editor window onto the clipboard. The currently selected code is NOT deleted.","title":"Copy (Ctrl + C)"},{"location":"menus/#paste-ctrl-v","text":"This command replaces the current selection with the code from the clipboard.","title":"Paste (Ctrl + V)"},{"location":"menus/#indent-tab","text":"If you have lines of code selected in the editor window, pressing the tab key will indent those lines by four spaces. If only a partial line is selected, after pressing the tab key, the entire line will become selected.","title":"Indent (Tab)"},{"location":"menus/#unindent-shift-tab","text":"If you have lines of code selected in the editor window, pressing the shift-tab key will unindent those lines by four spaces. If only a partial line is selected, after pressing the shift-tab key, the entire line will become selected.","title":"Unindent (Shift + Tab)"},{"location":"menus/#comment-selection-ctrl-k","text":"Prepends the selected lines with // to transform it into comment. Useful when wanting to temporarily disable part of your code.","title":"Comment Selection (Ctrl + K)"},{"location":"menus/#uncomment-selection-ctrl-u","text":"Removes any prepended // from the selected lines.","title":"Uncomment Selection (Ctrl + U)"},{"location":"menus/#format-document-ctrl-q","text":"Automatically indents code, and trims whitespace from line ends.","title":"Format Document (Ctrl + Q)"},{"location":"menus/#view","text":"","title":"View"},{"location":"menus/#errors-list-ctrl-e","text":"This will toggle the visibility of the errors list.","title":"Errors List (Ctrl + E)"},{"location":"menus/#debug-output-ctrl-alt-o","text":"This toggles the visibility of the debug output. Note Having the debug output visible will also put the compiler into Debug mode.","title":"Debug Output (Ctrl + Alt + O)"},{"location":"menus/#transparency","text":"By default, the CodeLab window is not transparent at all. If you would like to be able to see through the code window to observe the effect your script is having on the current selection, use this option to modify CodeLab\u2019s transparency level. You may select 50% (nearly transparent), 25%, 10% (barely transparent), and 0% (not transparent).","title":"Transparency"},{"location":"menus/#help","text":"","title":"Help"},{"location":"menus/#help-topics-f1","text":"Opens the online CodeLab Help page.","title":"Help Topics... (F1)"},{"location":"menus/#changes-on-this-version","text":"Opens the online changelog.","title":"Changes on this version..."},{"location":"menus/#discuss-plugin-development","text":"Open the online forum for Paint.NET plugin development.","title":"Discuss Plugin Development..."},{"location":"menus/#codelab-settings","text":"Opens the CodeLab Settings dialog.","title":"CodeLab Settings..."},{"location":"menus/#about","text":"Shows the About box which includes the version number and copyright message for CodeLab.","title":"About..."},{"location":"new-doc/","text":"New Document \u00b6 This allows you to create a new code document by configuring templates. TODO Loop Style \u00b6 TODO Basic \u2014 Advanced (unsafe pointers) \u2014 None (GDI+) \u2014 Variables \u00b6 TODO Code Samples \u00b6 TODO Render Options \u00b6 TODO Pixel Flow for complex effects \u00b6 TODO","title":"New Document"},{"location":"new-doc/#new-document","text":"This allows you to create a new code document by configuring templates. TODO","title":"New Document"},{"location":"new-doc/#loop-style","text":"TODO Basic \u2014 Advanced (unsafe pointers) \u2014 None (GDI+) \u2014","title":"Loop Style"},{"location":"new-doc/#variables","text":"TODO","title":"Variables"},{"location":"new-doc/#code-samples","text":"TODO","title":"Code Samples"},{"location":"new-doc/#render-options","text":"TODO","title":"Render Options"},{"location":"new-doc/#pixel-flow-for-complex-effects","text":"TODO","title":"Pixel Flow for complex effects"},{"location":"settings/","text":"Settings \u00b6 User Interface \u00b6 Toolbar \u00b6 This toggles the visibility of the toolbar. Line Numbers \u00b6 This toggles the Line Numbers margin in the editor. Bookmarks \u00b6 This toggles the Bookmarks margin in the editor. Code Folding \u00b6 This toggles the Code Folding margin in the editor. Indicator Map \u00b6 This toggles the Indicator Map in the editor. Word Wrap code files \u00b6 This toggles Word Wrap in the editor for code files. Word Wrap text files \u00b6 This toggles Word Wrap in the editor for plain text files. Current line frame \u00b6 This toggles showing the current line highlight as a frame outline. Indent Spaces \u00b6 Choose an indent size of 2 or 4 spaces. Show Whitespace \u00b6 This toggles the visibility of the whitespace indicators in the editor. Font \u00b6 These changes the Font used in the editor and the Debug Output. Cascadia Code Consolas Courier New Envy Code R Fira Code Hack JetBrains Mono Verdana Large Font \u00b6 If you have trouble seeing the code in the code window because it is too small, large font mode will increase the size of the text in the code editor window to 125% of normal size. Select the option again to return the code to normal size. Theme \u00b6 There are three options for theme: Auto Light Dark Info Auto is not an actual theme, but rather will automatically select Light or Dark based on your chosen Color Scheme in paint.net . Extended Colors \u00b6 Adds additional syntax highlighting colors for Structs, Enums, variables, ect. Snippets \u00b6 TODO Spellcheck \u00b6 Info Spellcheck is not available on Windows 7. TODO Compiler \u00b6 TODO Updates \u00b6 TODO","title":"Settings"},{"location":"settings/#settings","text":"","title":"Settings"},{"location":"settings/#user-interface","text":"","title":"User Interface"},{"location":"settings/#toolbar","text":"This toggles the visibility of the toolbar.","title":"Toolbar"},{"location":"settings/#line-numbers","text":"This toggles the Line Numbers margin in the editor.","title":"Line Numbers"},{"location":"settings/#bookmarks","text":"This toggles the Bookmarks margin in the editor.","title":"Bookmarks"},{"location":"settings/#code-folding","text":"This toggles the Code Folding margin in the editor.","title":"Code Folding"},{"location":"settings/#indicator-map","text":"This toggles the Indicator Map in the editor.","title":"Indicator Map"},{"location":"settings/#word-wrap-code-files","text":"This toggles Word Wrap in the editor for code files.","title":"Word Wrap code files"},{"location":"settings/#word-wrap-text-files","text":"This toggles Word Wrap in the editor for plain text files.","title":"Word Wrap text files"},{"location":"settings/#current-line-frame","text":"This toggles showing the current line highlight as a frame outline.","title":"Current line frame"},{"location":"settings/#indent-spaces","text":"Choose an indent size of 2 or 4 spaces.","title":"Indent Spaces"},{"location":"settings/#show-whitespace","text":"This toggles the visibility of the whitespace indicators in the editor.","title":"Show Whitespace"},{"location":"settings/#font","text":"These changes the Font used in the editor and the Debug Output. Cascadia Code Consolas Courier New Envy Code R Fira Code Hack JetBrains Mono Verdana","title":"Font"},{"location":"settings/#large-font","text":"If you have trouble seeing the code in the code window because it is too small, large font mode will increase the size of the text in the code editor window to 125% of normal size. Select the option again to return the code to normal size.","title":"Large Font"},{"location":"settings/#theme","text":"There are three options for theme: Auto Light Dark Info Auto is not an actual theme, but rather will automatically select Light or Dark based on your chosen Color Scheme in paint.net .","title":"Theme"},{"location":"settings/#extended-colors","text":"Adds additional syntax highlighting colors for Structs, Enums, variables, ect.","title":"Extended Colors"},{"location":"settings/#snippets","text":"TODO","title":"Snippets"},{"location":"settings/#spellcheck","text":"Info Spellcheck is not available on Windows 7. TODO","title":"Spellcheck"},{"location":"settings/#compiler","text":"TODO","title":"Compiler"},{"location":"settings/#updates","text":"TODO","title":"Updates"},{"location":"tab-bar/","text":"Tab Bar \u00b6 The Tab Bar allows CodeLab to quickly switch between multiple open scripts. Tab Overview \u00b6 Each tab will display an icon and a title. If an icon (PNG format) exists for the .cs file, it will be displayed. Otherwise, a generic icon is displayed. If the file has unsaved changes, an asterisk ( * ) is display to the right of the title. Closing Tabs \u00b6 Tabs may be closed in any of these three ways: Ctrl + W Mouse middle click Click red X","title":"Tab Bar"},{"location":"tab-bar/#tab-bar","text":"The Tab Bar allows CodeLab to quickly switch between multiple open scripts.","title":"Tab Bar"},{"location":"tab-bar/#tab-overview","text":"Each tab will display an icon and a title. If an icon (PNG format) exists for the .cs file, it will be displayed. Otherwise, a generic icon is displayed. If the file has unsaved changes, an asterisk ( * ) is display to the right of the title.","title":"Tab Overview"},{"location":"tab-bar/#closing-tabs","text":"Tabs may be closed in any of these three ways: Ctrl + W Mouse middle click Click red X","title":"Closing Tabs"},{"location":"toolbar/","text":"Toolbar \u00b6 New (Ctrl + N) \u00b6 Opens the New Document dialog, which allows for to configurable templates. Open (Ctrl + O) \u00b6 Display a dialog to choose a .cs file to load into CodeLab. Save (Ctrl + S) \u00b6 Saves the changes to the opened .cs file. Build DLL (Ctrl + B) \u00b6 Use this option when you are happy with your effect and want to make it a permanent part of your Paint.NET (or you want to share your effect with your friends). Be sure to save your script file ( Ctrl + S ) before saving as a DLL. See this page for more details on creating DLL files for use with Paint.NET. User Interface Designer (Ctrl + I) \u00b6 Use this option before you start editing your Render function to design the user interface controls your effect will have. See this page for more details on using CodeLab\u2019s UI designer. Preview Effect (Ctrl + P) \u00b6 Displays the effect with it\u2019s generated UI, and temporarily renders the effect to the Paint.net canvas. Select All (Ctrl + A) \u00b6 Highlights all the text in the code editor. Cut (Ctrl + X) \u00b6 This command deletes the currently selected code in the editor window and places a copy of the deleted code onto the clipboard. Copy (Ctrl + C) \u00b6 This command places a copy of the currently selected code in the editor window onto the clipboard. The currently selected code is NOT deleted. Paste (Ctrl + V) \u00b6 This command replaces the current selection with the code from the clipboard. Undo (Ctrl + Z) \u00b6 Steps backwards in the edit history of the document. Redo (Ctrl + Y) \u00b6 Steps forwards in the edit history of the document. Indent (Tab) \u00b6 If you have lines of code selected in the editor window, pressing the tab key will indent those lines by four spaces. If only a partial line is selected, after pressing the tab key, the entire line will become selected. Unindent (Shift + Tab) \u00b6 If you have lines of code selected in the editor window, pressing the shift-tab key will unindent those lines by four spaces. If only a partial line is selected, after pressing the shift-tab key, the entire line will become selected. Comment Selection (Ctrl + K) \u00b6 Prepends the selected lines with // to transform it into comment. Useful when wanting to temporarily disable part of your code. Uncomment Selection (Ctrl + U) \u00b6 Removes any prepended // from the selected lines. Find (Ctrl + F) \u00b6 Opens the Find & Replace panel. Replace (Ctrl + H) \u00b6 Opens the Find & Replace panel in expanded form. Settings \u00b6 Opens the CodeLab Settings dialog.","title":"Toolbar"},{"location":"toolbar/#toolbar","text":"","title":"Toolbar"},{"location":"toolbar/#new-ctrl-n","text":"Opens the New Document dialog, which allows for to configurable templates.","title":"New (Ctrl + N)"},{"location":"toolbar/#open-ctrl-o","text":"Display a dialog to choose a .cs file to load into CodeLab.","title":"Open (Ctrl + O)"},{"location":"toolbar/#save-ctrl-s","text":"Saves the changes to the opened .cs file.","title":"Save (Ctrl + S)"},{"location":"toolbar/#build-dll-ctrl-b","text":"Use this option when you are happy with your effect and want to make it a permanent part of your Paint.NET (or you want to share your effect with your friends). Be sure to save your script file ( Ctrl + S ) before saving as a DLL. See this page for more details on creating DLL files for use with Paint.NET.","title":"Build DLL (Ctrl + B)"},{"location":"toolbar/#user-interface-designer-ctrl-i","text":"Use this option before you start editing your Render function to design the user interface controls your effect will have. See this page for more details on using CodeLab\u2019s UI designer.","title":"User Interface Designer (Ctrl + I)"},{"location":"toolbar/#preview-effect-ctrl-p","text":"Displays the effect with it\u2019s generated UI, and temporarily renders the effect to the Paint.net canvas.","title":"Preview Effect (Ctrl + P)"},{"location":"toolbar/#select-all-ctrl-a","text":"Highlights all the text in the code editor.","title":"Select All (Ctrl + A)"},{"location":"toolbar/#cut-ctrl-x","text":"This command deletes the currently selected code in the editor window and places a copy of the deleted code onto the clipboard.","title":"Cut (Ctrl + X)"},{"location":"toolbar/#copy-ctrl-c","text":"This command places a copy of the currently selected code in the editor window onto the clipboard. The currently selected code is NOT deleted.","title":"Copy (Ctrl + C)"},{"location":"toolbar/#paste-ctrl-v","text":"This command replaces the current selection with the code from the clipboard.","title":"Paste (Ctrl + V)"},{"location":"toolbar/#undo-ctrl-z","text":"Steps backwards in the edit history of the document.","title":"Undo (Ctrl + Z)"},{"location":"toolbar/#redo-ctrl-y","text":"Steps forwards in the edit history of the document.","title":"Redo (Ctrl + Y)"},{"location":"toolbar/#indent-tab","text":"If you have lines of code selected in the editor window, pressing the tab key will indent those lines by four spaces. If only a partial line is selected, after pressing the tab key, the entire line will become selected.","title":"Indent (Tab)"},{"location":"toolbar/#unindent-shift-tab","text":"If you have lines of code selected in the editor window, pressing the shift-tab key will unindent those lines by four spaces. If only a partial line is selected, after pressing the shift-tab key, the entire line will become selected.","title":"Unindent (Shift + Tab)"},{"location":"toolbar/#comment-selection-ctrl-k","text":"Prepends the selected lines with // to transform it into comment. Useful when wanting to temporarily disable part of your code.","title":"Comment Selection (Ctrl + K)"},{"location":"toolbar/#uncomment-selection-ctrl-u","text":"Removes any prepended // from the selected lines.","title":"Uncomment Selection (Ctrl + U)"},{"location":"toolbar/#find-ctrl-f","text":"Opens the Find & Replace panel.","title":"Find (Ctrl + F)"},{"location":"toolbar/#replace-ctrl-h","text":"Opens the Find & Replace panel in expanded form.","title":"Replace (Ctrl + H)"},{"location":"toolbar/#settings","text":"Opens the CodeLab Settings dialog.","title":"Settings"},{"location":"ui-designer/","text":"User Interface Designer \u00b6 When CodeLab starts, it loads a default script that contains a Render function and a UICode block that defines the type of interface your effect will have. The default UICode block looks like this: #region UICode IntSliderControl Amount1 = 0 ; // [0,100] Slider 1 Description IntSliderControl Amount2 = 0 ; // [0,100] Slider 2 Description IntSliderControl Amount3 = 0 ; // [0,100] Slider 3 Description #endregion The UICode block starts with the #region UICode line, ends with the #endregion line, and contains one line for each control you wish to include in your effect UI. Each of those interior lines defines a variable for use in your render loop and describes to CodeLab how you want the control to look. You may include as many or as few lines as you wish. The default script contains definitions for 3 integer sliders that have a default value of 0 and a range of 0 to 100. Preview \u00b6 This displays a preview of the of built dialog window.","title":"User Interface Designer"},{"location":"ui-designer/#user-interface-designer","text":"When CodeLab starts, it loads a default script that contains a Render function and a UICode block that defines the type of interface your effect will have. The default UICode block looks like this: #region UICode IntSliderControl Amount1 = 0 ; // [0,100] Slider 1 Description IntSliderControl Amount2 = 0 ; // [0,100] Slider 2 Description IntSliderControl Amount3 = 0 ; // [0,100] Slider 3 Description #endregion The UICode block starts with the #region UICode line, ends with the #endregion line, and contains one line for each control you wish to include in your effect UI. Each of those interior lines defines a variable for use in your render loop and describes to CodeLab how you want the control to look. You may include as many or as few lines as you wish. The default script contains definitions for 3 integer sliders that have a default value of 0 and a range of 0 to 100.","title":"User Interface Designer"},{"location":"ui-designer/#preview","text":"This displays a preview of the of built dialog window.","title":"Preview"}]}